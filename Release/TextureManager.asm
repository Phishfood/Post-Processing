; Listing generated by Microsoft (R) Optimizing Compiler Version 18.00.30501.0 

	TITLE	C:\Users\Simon\Documents\GitHub\Post-Processing\TextureManager.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?MAX_TEXTURES@CTextureManager@@0HB		; CTextureManager::MAX_TEXTURES
PUBLIC	?MAX_NAME_LENGTH@CTextureManager@@0HB		; CTextureManager::MAX_NAME_LENGTH
;	COMDAT ?MAX_NAME_LENGTH@CTextureManager@@0HB
CONST	SEGMENT
?MAX_NAME_LENGTH@CTextureManager@@0HB DD 032H		; CTextureManager::MAX_NAME_LENGTH
CONST	ENDS
;	COMDAT ?MAX_TEXTURES@CTextureManager@@0HB
CONST	SEGMENT
?MAX_TEXTURES@CTextureManager@@0HB DD 064H		; CTextureManager::MAX_TEXTURES
CONST	ENDS
PUBLIC	?LoadTexture@CTextureManager@@QAEPAUID3D10ShaderResourceView@@QAD@Z ; CTextureManager::LoadTexture
PUBLIC	?UnloadTexture@CTextureManager@@QAEXQAD@Z	; CTextureManager::UnloadTexture
PUBLIC	?UnloadTexture@CTextureManager@@QAEXH@Z		; CTextureManager::UnloadTexture
PUBLIC	??0CTextureManager@@QAE@PAUID3D10Device@@@Z	; CTextureManager::CTextureManager
PUBLIC	??1CTextureManager@@QAE@XZ			; CTextureManager::~CTextureManager
EXTRN	_D3DX10CreateShaderResourceViewFromFileA@24:PROC
; Function compile flags: /Ogtp
; File c:\users\simon\documents\github\post-processing\texturemanager.cpp
;	COMDAT ??1CTextureManager@@QAE@XZ
_TEXT	SEGMENT
??1CTextureManager@@QAE@XZ PROC				; CTextureManager::~CTextureManager, COMDAT
; _this$ = ecx

; 12   : }

	ret	0
??1CTextureManager@@QAE@XZ ENDP				; CTextureManager::~CTextureManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\simon\documents\github\post-processing\texturemanager.cpp
;	COMDAT ??0CTextureManager@@QAE@PAUID3D10Device@@@Z
_TEXT	SEGMENT
_device$ = 8						; size = 4
??0CTextureManager@@QAE@PAUID3D10Device@@@Z PROC	; CTextureManager::CTextureManager, COMDAT
; _this$ = ecx

; 5    : {

	push	ebp
	mov	ebp, esp

; 6    : 	mpd3dDevice = device;

	mov	eax, DWORD PTR _device$[ebp]
	mov	DWORD PTR [ecx], eax

; 7    : }

	mov	eax, ecx
	pop	ebp
	ret	4
??0CTextureManager@@QAE@PAUID3D10Device@@@Z ENDP	; CTextureManager::CTextureManager
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\simon\documents\github\post-processing\texturemanager.cpp
;	COMDAT ?UnloadTexture@CTextureManager@@QAEXH@Z
_TEXT	SEGMENT
_index$ = 8						; size = 4
?UnloadTexture@CTextureManager@@QAEXH@Z PROC		; CTextureManager::UnloadTexture, COMDAT
; _this$ = ecx

; 44   : 
; 45   : }

	ret	4
?UnloadTexture@CTextureManager@@QAEXH@Z ENDP		; CTextureManager::UnloadTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\simon\documents\github\post-processing\texturemanager.cpp
;	COMDAT ?UnloadTexture@CTextureManager@@QAEXQAD@Z
_TEXT	SEGMENT
_filename$ = 8						; size = 4
?UnloadTexture@CTextureManager@@QAEXQAD@Z PROC		; CTextureManager::UnloadTexture, COMDAT
; _this$ = ecx

; 39   : 
; 40   : }

	ret	4
?UnloadTexture@CTextureManager@@QAEXQAD@Z ENDP		; CTextureManager::UnloadTexture
_TEXT	ENDS
; Function compile flags: /Ogtp
; File c:\users\simon\documents\github\post-processing\texturemanager.cpp
;	COMDAT ?LoadTexture@CTextureManager@@QAEPAUID3D10ShaderResourceView@@QAD@Z
_TEXT	SEGMENT
_newTexture$ = 8					; size = 4
_filename$ = 8						; size = 4
?LoadTexture@CTextureManager@@QAEPAUID3D10ShaderResourceView@@QAD@Z PROC ; CTextureManager::LoadTexture, COMDAT
; _this$ = ecx

; 15   : {

	push	ebp
	mov	ebp, esp
	push	ebx
	mov	ebx, ecx

; 16   : 	
; 17   : 	for( int i = 0; i < miNumTextures; i++ )

	mov	ecx, DWORD PTR _filename$[ebp]
	push	esi
	xor	esi, esi
	push	edi
	cmp	DWORD PTR [ebx+5404], esi
	jle	SHORT $LN3@LoadTextur
	lea	edi, DWORD PTR [ebx+404]
	npad	5
$LL5@LoadTextur:

; 18   : 	{
; 19   : 		if( strcmp( filename, mcTexturesFile[i] ) == 0 )

	mov	eax, edi
$LL13@LoadTextur:
	mov	dl, BYTE PTR [ecx]
	cmp	dl, BYTE PTR [eax]
	jne	SHORT $LN14@LoadTextur
	test	dl, dl
	je	SHORT $LN15@LoadTextur
	mov	dl, BYTE PTR [ecx+1]
	cmp	dl, BYTE PTR [eax+1]
	jne	SHORT $LN14@LoadTextur
	add	ecx, 2
	add	eax, 2
	test	dl, dl
	jne	SHORT $LL13@LoadTextur
$LN15@LoadTextur:
	xor	eax, eax
	jmp	SHORT $LN16@LoadTextur
$LN14@LoadTextur:
	sbb	eax, eax
	or	eax, 1
$LN16@LoadTextur:
	test	eax, eax
	je	SHORT $LN9@LoadTextur

; 16   : 	
; 17   : 	for( int i = 0; i < miNumTextures; i++ )

	mov	ecx, DWORD PTR _filename$[ebp]
	inc	esi
	add	edi, 50					; 00000032H
	cmp	esi, DWORD PTR [ebx+5404]
	jl	SHORT $LL5@LoadTextur
$LN3@LoadTextur:

; 22   : 		}
; 23   : 	}
; 24   : 	
; 25   : 	ID3D10ShaderResourceView* newTexture;
; 26   : 	D3DX10CreateShaderResourceViewFromFileA( mpd3dDevice, filename,		NULL, NULL, &newTexture, NULL );

	push	0
	lea	eax, DWORD PTR _newTexture$[ebp]
	push	eax
	push	0
	push	0
	push	ecx
	push	DWORD PTR [ebx]
	call	_D3DX10CreateShaderResourceViewFromFileA@24

; 27   : 	if( newTexture == nullptr )

	mov	ecx, DWORD PTR _newTexture$[ebp]
	test	ecx, ecx
	jne	SHORT $LN1@LoadTextur

; 28   : 	{
; 29   : 		return nullptr;

	pop	edi
	pop	esi
	xor	eax, eax
	pop	ebx

; 34   : 	
; 35   : }

	pop	ebp
	ret	4
$LN9@LoadTextur:

; 20   : 		{
; 21   : 			return mpTextures[i];

	mov	eax, DWORD PTR [ebx+esi*4+4]
	pop	edi
	pop	esi
	pop	ebx

; 34   : 	
; 35   : }

	pop	ebp
	ret	4
$LN1@LoadTextur:

; 30   : 	}
; 31   : 
; 32   : 	mpTextures[miNumTextures] = newTexture;

	mov	eax, DWORD PTR [ebx+5404]
	pop	edi
	pop	esi
	mov	DWORD PTR [ebx+eax*4+4], ecx

; 33   : 	miNumTextures++;

	inc	DWORD PTR [ebx+5404]
	pop	ebx

; 34   : 	
; 35   : }

	pop	ebp
	ret	4
?LoadTexture@CTextureManager@@QAEPAUID3D10ShaderResourceView@@QAD@Z ENDP ; CTextureManager::LoadTexture
_TEXT	ENDS
END
